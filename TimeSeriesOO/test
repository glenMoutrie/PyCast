import pandas as pd

class TimeSeries:

    def __init__(self):

        self.data = None
        self.col_ref = None
        self.date_format = "%Y-%m-%d"

        pass

    def consumeTimeSeriesfromCSV(self, location, col_ref, date_format):

        self.col_ref = col_ref

        local = pd.read_csv(location, parse_dates=[col_ref['dates']], date_parser=lambda x: dateParser(x, date_format))

        local = local.sort_values(col_ref['dates'])

        local = local.dropna(subset=[col_ref['dates']])

        self.data = local

    def getMetrics(self):
        average_step = self.data[self.col_ref['dates']].diff()
        print "Average Step = " + str(average_step.median()) + "\nSD Step = " + str(average_step.std()),"\n"


    def plot(self):
        pass






def dateParser(x, date_format):

    try:
        x = pd.datetime.strptime(x, date_format)

    except ValueError:
        x = None

    return x










column_references = {'dates': "Month", 'values': 'Air_Passengers'}
date_format = "%Y-%m-%d"

TS = TimeSeries()

TS.consumeTimeSeriesfromCSV("~/PycharmProjects/PyCast/AirPassengers.csv",  column_references, date_format)
TS.getMetrics()

TS.consumeTimeSeriesfromCSV("~/PycharmProjects/PyCast/AirPassengersMissingValues.csv",  column_references, date_format)
TS.getMetrics()